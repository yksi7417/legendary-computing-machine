plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.4'
}

defaultTasks 'clean', 'test', 'shadowJar'

configurations {
    shadow
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'com.github.johnrengelman.shadow'

    compileJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()
        mavenLocal()
    }
}

project(':quantsignals-main') {
    configurations{
        codecGeneration
    }

    dependencies {
        compile 'io.aeron:aeron-all:1.4.1'
        compile 'joda-time:joda-time:2.9.6'
        compile files('build/classes/java/generated')

        testCompile 'junit:junit:4.12'
        testCompile 'org.mockito:mockito-core:2.9.0'
        testCompile 'org.hamcrest:hamcrest-library:1.3'

        codecGeneration "uk.co.real-logic:sbe-tool:1.7.1"
    }

    def generatedDir = file("${buildDir}/generated-src")
    sourceSets {
        generated.java.srcDir generatedDir
    }

    compileJava.dependsOn 'compileGeneratedJava'
    compileGeneratedJava.dependsOn 'generateCodecs'
    compileGeneratedJava.classpath += configurations.codecGeneration

    task (generateCodecs, type: JavaExec) {
        main = 'uk.co.real_logic.sbe.SbeTool'
        classpath = configurations.codecGeneration
        systemProperties(
                'sbe.output.dir': generatedDir,
                'sbe.target.language': 'Java',
                'sbe.validation.stop.on.error': 'true',
                'sbe.validation.xsd': 'src/main/resources/fpl/sbe.xsd'
        )
        args = [ 'src/main/resources/storage-service-schema.xml' ]
    }

    test {
        testLogging {
            showStandardStreams = true
            exceptionFormat = 'full'
        }
    }
}

task runBenchmarks(type: Exec) {
    commandLine 'java',
            '-Dagrona.disable.bounds.checks=true',
            '-jar', 'quantsignals-main/build/libs/benchmarks.jar',
            '-wi', '3', '-i', '5', '-tu', 'us', '-f', '5'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
}